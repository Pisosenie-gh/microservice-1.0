"""Edit _ 

Revision ID: 115558b96141
Revises: b204068c1f55
Create Date: 2022-04-21 06:42:47.791529

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = '115558b96141'
down_revision = 'b204068c1f55'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('employee_status',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('nameRu', sa.String(), nullable=True),
    sa.Column('nameKz', sa.String(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_employee_status_id'), 'employee_status', ['id'], unique=False)
    op.create_table('ldap_login',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('login', sa.String(), nullable=True),
    sa.Column('isActive', sa.Integer(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_ldap_login_id'), 'ldap_login', ['id'], unique=False)
    op.create_table('military_service_attitude',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('nameRu', sa.String(), nullable=True),
    sa.Column('nameKz', sa.String(), nullable=True),
    sa.Column('isActive', sa.Integer(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_military_service_attitude_id'), 'military_service_attitude', ['id'], unique=False)
    op.create_table('nationality_sap',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(), nullable=True),
    sa.Column('isActive', sa.Integer(), nullable=True),
    sa.Column('code', sa.String(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_nationality_sap_id'), 'nationality_sap', ['id'], unique=False)
    op.create_table('replacement_type',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('nameRu', sa.String(), nullable=True),
    sa.Column('nameKz', sa.String(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_replacement_type_id'), 'replacement_type', ['id'], unique=False)
    op.create_table('staff_category',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('nameRu', sa.String(), nullable=True),
    sa.Column('nameKz', sa.String(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_staff_category_id'), 'staff_category', ['id'], unique=False)
    op.create_table('staff_unit_role',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('employeeFuncRoleSpecId', sa.Integer(), nullable=True),
    sa.Column('nameRu', sa.String(), nullable=True),
    sa.Column('nameKz', sa.String(), nullable=True),
    sa.Column('isActive', sa.Integer(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_staff_unit_role_id'), 'staff_unit_role', ['id'], unique=False)
    op.create_table('staff_unit_type',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('nameRu', sa.String(), nullable=True),
    sa.Column('nameKz', sa.String(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_staff_unit_type_id'), 'staff_unit_type', ['id'], unique=False)
    op.create_table('marital_status',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('nameRu', sa.String(), nullable=True),
    sa.Column('nameKz', sa.String(), nullable=True),
    sa.Column('genderId', sa.Integer(), nullable=True),
    sa.Column('isActive', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['genderId'], ['gender.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_marital_status_id'), 'marital_status', ['id'], unique=False)
    op.create_table('staff_unit',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('organizationUnitId', sa.Integer(), nullable=True),
    sa.Column('rate', sa.Integer(), nullable=True),
    sa.Column('isActive', sa.Integer(), nullable=True),
    sa.Column('positionId', sa.Integer(), nullable=True),
    sa.Column('typeId', sa.Integer(), nullable=True),
    sa.Column('staffCategoryId', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['positionId'], ['position.id'], ),
    sa.ForeignKeyConstraint(['staffCategoryId'], ['staff_category.id'], ),
    sa.ForeignKeyConstraint(['typeId'], ['staff_unit_type.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_staff_unit_id'), 'staff_unit', ['id'], unique=False)
    op.create_table('nationality_gender',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('nameRu', sa.String(), nullable=True),
    sa.Column('nameKz', sa.String(), nullable=True),
    sa.Column('isActive', sa.Integer(), nullable=True),
    sa.Column('nationalityId', sa.Integer(), nullable=True),
    sa.Column('genderId', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['genderId'], ['gender.id'], ),
    sa.ForeignKeyConstraint(['nationalityId'], ['nationality.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_nationality_gender_id'), 'nationality_gender', ['id'], unique=False)
    op.create_table('internal_employee',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('individualId', sa.Integer(), nullable=True),
    sa.Column('legalOrganizationlId', sa.Integer(), nullable=True),
    sa.Column('fullnameDeclinationId', sa.Integer(), nullable=True),
    sa.Column('financialAccountId', sa.Integer(), nullable=True),
    sa.Column('iin', sa.String(), nullable=True),
    sa.Column('personnelNumber', sa.String(), nullable=True),
    sa.Column('lastName', sa.String(), nullable=True),
    sa.Column('firstName', sa.String(), nullable=True),
    sa.Column('middleName', sa.String(), nullable=True),
    sa.Column('birthDate', sa.Date(), nullable=True),
    sa.Column('workStartDate', sa.Date(), nullable=True),
    sa.Column('isReserveMember', sa.Boolean(), nullable=True),
    sa.Column('isInsider', sa.Boolean(), nullable=True),
    sa.Column('isActive', sa.String(), nullable=True),
    sa.Column('gender', sa.String(), nullable=True),
    sa.Column('statusId', sa.Integer(), nullable=True),
    sa.Column('gradeId', sa.Integer(), nullable=True),
    sa.Column('maritalStatusId', sa.Integer(), nullable=True),
    sa.Column('militaryServiceAttitudeId', sa.Integer(), nullable=True),
    sa.Column('nationalityGenderId', sa.Integer(), nullable=True),
    sa.Column('ldapLoginId', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['gradeId'], ['grade.id'], ),
    sa.ForeignKeyConstraint(['ldapLoginId'], ['ldap_login.id'], ),
    sa.ForeignKeyConstraint(['maritalStatusId'], ['marital_status.id'], ),
    sa.ForeignKeyConstraint(['militaryServiceAttitudeId'], ['military_service_attitude.id'], ),
    sa.ForeignKeyConstraint(['nationalityGenderId'], ['nationality_gender.id'], ),
    sa.ForeignKeyConstraint(['statusId'], ['employee_status.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_internal_employee_id'), 'internal_employee', ['id'], unique=False)
    op.drop_index('ix_nationality-gender_id', table_name='nationality-gender')
    op.drop_table('nationality-gender')
    op.drop_index('ix_marital-status_id', table_name='marital-status')
    op.drop_table('marital-status')
    op.drop_index('ix_nationality-sap_id', table_name='nationality-sap')
    op.drop_table('nationality-sap')
    op.drop_index('ix_staff-unit_id', table_name='staff-unit')
    op.drop_table('staff-unit')
    op.drop_index('ix_staff-category_id', table_name='staff-category')
    op.drop_table('staff-category')
    op.drop_index('ix_military-service-attitude_id', table_name='military-service-attitude')
    op.drop_table('military-service-attitude')
    op.drop_index('ix_internal-employee_id', table_name='internal-employee')
    op.drop_table('internal-employee')
    op.drop_index('ix_ldap-login_id', table_name='ldap-login')
    op.drop_table('ldap-login')
    op.drop_index('ix_replacement-type_id', table_name='replacement-type')
    op.drop_table('replacement-type')
    op.drop_index('ix_employee-status_id', table_name='employee-status')
    op.drop_table('employee-status')
    op.drop_index('ix_staff-unit-role_id', table_name='staff-unit-role')
    op.drop_table('staff-unit-role')
    op.drop_index('ix_staff-unit-type_id', table_name='staff-unit-type')
    op.drop_table('staff-unit-type')
    op.drop_constraint('appointment_employeeId_fkey', 'appointment', type_='foreignkey')
    op.drop_constraint('appointment_staffUnitId_fkey', 'appointment', type_='foreignkey')
    op.create_foreign_key(None, 'appointment', 'internal_employee', ['employeeId'], ['id'])
    op.create_foreign_key(None, 'appointment', 'staff_unit', ['staffUnitId'], ['id'])
    op.drop_constraint('nationality_nationalitySAPId_fkey', 'nationality', type_='foreignkey')
    op.create_foreign_key(None, 'nationality', 'nationality_sap', ['nationalitySAPId'], ['id'])
    op.drop_constraint('replacement_typeId_fkey', 'replacement', type_='foreignkey')
    op.drop_constraint('replacement_replacedId_fkey', 'replacement', type_='foreignkey')
    op.drop_constraint('replacement_replacerId_fkey', 'replacement', type_='foreignkey')
    op.create_foreign_key(None, 'replacement', 'replacement_type', ['typeId'], ['id'])
    op.create_foreign_key(None, 'replacement', 'internal_employee', ['replacerId'], ['id'])
    op.create_foreign_key(None, 'replacement', 'internal_employee', ['replacedId'], ['id'])
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_constraint(None, 'replacement', type_='foreignkey')
    op.drop_constraint(None, 'replacement', type_='foreignkey')
    op.drop_constraint(None, 'replacement', type_='foreignkey')
    op.create_foreign_key('replacement_replacerId_fkey', 'replacement', 'internal-employee', ['replacerId'], ['id'])
    op.create_foreign_key('replacement_replacedId_fkey', 'replacement', 'internal-employee', ['replacedId'], ['id'])
    op.create_foreign_key('replacement_typeId_fkey', 'replacement', 'replacement-type', ['typeId'], ['id'])
    op.drop_constraint(None, 'nationality', type_='foreignkey')
    op.create_foreign_key('nationality_nationalitySAPId_fkey', 'nationality', 'nationality-sap', ['nationalitySAPId'], ['id'])
    op.drop_constraint(None, 'appointment', type_='foreignkey')
    op.drop_constraint(None, 'appointment', type_='foreignkey')
    op.create_foreign_key('appointment_staffUnitId_fkey', 'appointment', 'staff-unit', ['staffUnitId'], ['id'])
    op.create_foreign_key('appointment_employeeId_fkey', 'appointment', 'internal-employee', ['employeeId'], ['id'])
    op.create_table('staff-unit-type',
    sa.Column('id', sa.INTEGER(), server_default=sa.text('nextval(\'"staff-unit-type_id_seq"\'::regclass)'), autoincrement=True, nullable=False),
    sa.Column('nameRu', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('nameKz', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('id', name='staff-unit-type_pkey'),
    postgresql_ignore_search_path=False
    )
    op.create_index('ix_staff-unit-type_id', 'staff-unit-type', ['id'], unique=False)
    op.create_table('staff-unit-role',
    sa.Column('id', sa.INTEGER(), server_default=sa.text('nextval(\'"staff-unit-role_id_seq"\'::regclass)'), autoincrement=True, nullable=False),
    sa.Column('employeeFuncRoleSpecId', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('nameRu', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('nameKz', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('isActive', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('id', name='staff-unit-role_pkey')
    )
    op.create_index('ix_staff-unit-role_id', 'staff-unit-role', ['id'], unique=False)
    op.create_table('employee-status',
    sa.Column('id', sa.INTEGER(), server_default=sa.text('nextval(\'"employee-status_id_seq"\'::regclass)'), autoincrement=True, nullable=False),
    sa.Column('nameRu', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('nameKz', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('id', name='employee-status_pkey'),
    postgresql_ignore_search_path=False
    )
    op.create_index('ix_employee-status_id', 'employee-status', ['id'], unique=False)
    op.create_table('replacement-type',
    sa.Column('id', sa.INTEGER(), server_default=sa.text('nextval(\'"replacement-type_id_seq"\'::regclass)'), autoincrement=True, nullable=False),
    sa.Column('nameRu', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('nameKz', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('id', name='replacement-type_pkey')
    )
    op.create_index('ix_replacement-type_id', 'replacement-type', ['id'], unique=False)
    op.create_table('ldap-login',
    sa.Column('id', sa.INTEGER(), server_default=sa.text('nextval(\'"ldap-login_id_seq"\'::regclass)'), autoincrement=True, nullable=False),
    sa.Column('login', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('isActive', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('id', name='ldap-login_pkey'),
    postgresql_ignore_search_path=False
    )
    op.create_index('ix_ldap-login_id', 'ldap-login', ['id'], unique=False)
    op.create_table('internal-employee',
    sa.Column('id', sa.INTEGER(), server_default=sa.text('nextval(\'"internal-employee_id_seq"\'::regclass)'), autoincrement=True, nullable=False),
    sa.Column('individualId', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('legalOrganizationlId', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('fullnameDeclinationId', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('financialAccountId', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('iin', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('personnelNumber', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('lastName', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('firstName', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('middleName', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('birthDate', sa.DATE(), autoincrement=False, nullable=True),
    sa.Column('workStartDate', sa.DATE(), autoincrement=False, nullable=True),
    sa.Column('isReserveMember', sa.BOOLEAN(), autoincrement=False, nullable=True),
    sa.Column('isInsider', sa.BOOLEAN(), autoincrement=False, nullable=True),
    sa.Column('gender', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('statusId', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('gradeId', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('maritalStatusId', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('nationalityGenderId', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('militaryServiceAttitudeId', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('ldapLoginId', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('isActive', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['gradeId'], ['grade.id'], name='internal-employee_gradeId_fkey'),
    sa.ForeignKeyConstraint(['ldapLoginId'], ['ldap-login.id'], name='internal-employee_ldapLoginId_fkey'),
    sa.ForeignKeyConstraint(['maritalStatusId'], ['marital-status.id'], name='internal-employee_maritalStatusId_fkey'),
    sa.ForeignKeyConstraint(['militaryServiceAttitudeId'], ['military-service-attitude.id'], name='internal-employee_militaryServiceAttitudeId_fkey'),
    sa.ForeignKeyConstraint(['nationalityGenderId'], ['nationality-gender.id'], name='internal-employee_nationalityGenderId_fkey'),
    sa.ForeignKeyConstraint(['statusId'], ['employee-status.id'], name='internal-employee_statusId_fkey'),
    sa.PrimaryKeyConstraint('id', name='internal-employee_pkey')
    )
    op.create_index('ix_internal-employee_id', 'internal-employee', ['id'], unique=False)
    op.create_table('military-service-attitude',
    sa.Column('id', sa.INTEGER(), server_default=sa.text('nextval(\'"military-service-attitude_id_seq"\'::regclass)'), autoincrement=True, nullable=False),
    sa.Column('nameRu', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('nameKz', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('isActive', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('id', name='military-service-attitude_pkey')
    )
    op.create_index('ix_military-service-attitude_id', 'military-service-attitude', ['id'], unique=False)
    op.create_table('staff-category',
    sa.Column('id', sa.INTEGER(), server_default=sa.text('nextval(\'"staff-category_id_seq"\'::regclass)'), autoincrement=True, nullable=False),
    sa.Column('nameRu', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('nameKz', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('id', name='staff-category_pkey'),
    postgresql_ignore_search_path=False
    )
    op.create_index('ix_staff-category_id', 'staff-category', ['id'], unique=False)
    op.create_table('staff-unit',
    sa.Column('id', sa.INTEGER(), server_default=sa.text('nextval(\'"staff-unit_id_seq"\'::regclass)'), autoincrement=True, nullable=False),
    sa.Column('organizationUnitId', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('rate', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('isActive', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('positionId', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('typeId', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('staffCategoryId', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['positionId'], ['position.id'], name='staff-unit_positionId_fkey'),
    sa.ForeignKeyConstraint(['staffCategoryId'], ['staff-category.id'], name='staff-unit_staffCategoryId_fkey'),
    sa.ForeignKeyConstraint(['typeId'], ['staff-unit-type.id'], name='staff-unit_typeId_fkey'),
    sa.PrimaryKeyConstraint('id', name='staff-unit_pkey')
    )
    op.create_index('ix_staff-unit_id', 'staff-unit', ['id'], unique=False)
    op.create_table('nationality-sap',
    sa.Column('id', sa.INTEGER(), server_default=sa.text('nextval(\'"nationality-sap_id_seq"\'::regclass)'), autoincrement=True, nullable=False),
    sa.Column('name', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('isActive', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('code', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('id', name='nationality-sap_pkey'),
    postgresql_ignore_search_path=False
    )
    op.create_index('ix_nationality-sap_id', 'nationality-sap', ['id'], unique=False)
    op.create_table('marital-status',
    sa.Column('id', sa.INTEGER(), server_default=sa.text('nextval(\'"marital-status_id_seq"\'::regclass)'), autoincrement=True, nullable=False),
    sa.Column('nameRu', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('nameKz', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('genderId', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('isActive', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['genderId'], ['gender.id'], name='marital-status_genderId_fkey'),
    sa.PrimaryKeyConstraint('id', name='marital-status_pkey')
    )
    op.create_index('ix_marital-status_id', 'marital-status', ['id'], unique=False)
    op.create_table('nationality-gender',
    sa.Column('id', sa.INTEGER(), server_default=sa.text('nextval(\'"nationality-gender_id_seq"\'::regclass)'), autoincrement=True, nullable=False),
    sa.Column('nameRu', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('nameKz', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('nationalityId', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('genderId', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('isActive', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['genderId'], ['gender.id'], name='nationality-gender_genderId_fkey'),
    sa.ForeignKeyConstraint(['nationalityId'], ['nationality.id'], name='nationality-gender_nationalityId_fkey'),
    sa.PrimaryKeyConstraint('id', name='nationality-gender_pkey')
    )
    op.create_index('ix_nationality-gender_id', 'nationality-gender', ['id'], unique=False)
    op.drop_index(op.f('ix_internal_employee_id'), table_name='internal_employee')
    op.drop_table('internal_employee')
    op.drop_index(op.f('ix_nationality_gender_id'), table_name='nationality_gender')
    op.drop_table('nationality_gender')
    op.drop_index(op.f('ix_staff_unit_id'), table_name='staff_unit')
    op.drop_table('staff_unit')
    op.drop_index(op.f('ix_marital_status_id'), table_name='marital_status')
    op.drop_table('marital_status')
    op.drop_index(op.f('ix_staff_unit_type_id'), table_name='staff_unit_type')
    op.drop_table('staff_unit_type')
    op.drop_index(op.f('ix_staff_unit_role_id'), table_name='staff_unit_role')
    op.drop_table('staff_unit_role')
    op.drop_index(op.f('ix_staff_category_id'), table_name='staff_category')
    op.drop_table('staff_category')
    op.drop_index(op.f('ix_replacement_type_id'), table_name='replacement_type')
    op.drop_table('replacement_type')
    op.drop_index(op.f('ix_nationality_sap_id'), table_name='nationality_sap')
    op.drop_table('nationality_sap')
    op.drop_index(op.f('ix_military_service_attitude_id'), table_name='military_service_attitude')
    op.drop_table('military_service_attitude')
    op.drop_index(op.f('ix_ldap_login_id'), table_name='ldap_login')
    op.drop_table('ldap_login')
    op.drop_index(op.f('ix_employee_status_id'), table_name='employee_status')
    op.drop_table('employee_status')
    # ### end Alembic commands ###
